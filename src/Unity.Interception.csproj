<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId>Unity.Interception</PackageId>
    <Description>Unity Interception</Description>
    <Copyright>Copyright © .NET Foundation and Contributors. All Rights Reserved</Copyright>
    <PackageProjectUrl>https://github.com/unitycontainer/unity</PackageProjectUrl>
    <RepositoryUrl>https://github.com/unitycontainer/unity</RepositoryUrl>
    <PackageLicenseUrl>https://github.com/unitycontainer/unity/blob/master/LICENSE</PackageLicenseUrl>
    <PackageIconUrl>https://avatars1.githubusercontent.com/u/12849707</PackageIconUrl>
    <PackageTags>Unity Container unitycontainer Microsoft.Practices.Unity IoC Interception</PackageTags>
    <RepositoryType>git</RepositoryType>
    <Authors>Unity Open Source Project</Authors>
    <Company>Unity Open Source Project</Company>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>package.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
    <!--<TargetFrameworks>net5.0;netcoreapp3.0;netcoreapp2.0;net48;net47;net46;net45;netstandard2.1;netstandard2.0</TargetFrameworks>-->
    <TargetFrameworks>net5.0;netcoreapp3.0;netcoreapp2.0;net48;net47;net46;net45</TargetFrameworks>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4'))">
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\InterceptingRealProxy.Core.cs" />
  </ItemGroup>

  <ItemGroup Condition="!$(TargetFramework.StartsWith('net4'))">
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\InterceptingRealProxy.cs" />
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\TransparentProxyInputParameterCollection.cs" />
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\TransparentProxyInterceptor.cs" />
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\TransparentProxyMethodInvocation.cs" />
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\TransparentProxyMethodReturn.cs" />
    <Compile Remove="Interceptors\InstanceInterceptors\TransparentProxyInterception\TransparentProxyOutputParameterCollection.cs" />
  </ItemGroup>
  
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Remove="package.snk" />
    <EmbeddedResource Include="package.snk" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0' AND '$(TargetFramework)' != 'netcoreapp2.0'">
    
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != '' AND '$(TargetFramework)' != 'net40' ">
    <Compile Remove="Utilities\net 4.0\**" />
    <EmbeddedResource Remove="Utilities\net 4.0\**" />
    <None Remove="Utilities\net 4.0\**" />
  </ItemGroup>


  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>Portable</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <DebugType>Full</DebugType>
  </PropertyGroup>


  <PropertyGroup>
    <UnityContainer>..\..\Container\src\Unity.Container.csproj</UnityContainer>
  </PropertyGroup>

  <ItemGroup Condition="Exists('$(UnityContainer)')">
    <ProjectReference Include="$(UnityContainer)" />
  </ItemGroup>

  <ItemGroup Condition="!Exists('$(UnityContainer)')">
    <PackageReference Include="Unity.Container" Version="$(UnityContainerVersion)" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4'))">
    <Reference Include="System.Runtime.Remoting" />
  </ItemGroup>

  
  <!-- Sourcelink -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
